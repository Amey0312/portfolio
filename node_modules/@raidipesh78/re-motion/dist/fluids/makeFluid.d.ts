import { ComponentType, HTMLAttributes, CSSProperties, SVGAttributes } from 'react';
import { styleTrasformKeys } from '../helpers';
import { FluidValue } from './FluidValue';
import { FluidInterpolation } from './FluidInterpolation';
declare type WrappedComponentOrTag = ComponentType<HTMLAttributes<HTMLElement>> | keyof JSX.IntrinsicElements;
declare type FluidCSSProperties = {
    [key in keyof CSSProperties]: CSSProperties[key] | FluidValue | FluidInterpolation;
} & {
    [key in (typeof styleTrasformKeys)[number]]?: FluidValue | FluidInterpolation | number | string;
};
declare type FluidHTMLAttributes<T> = {
    [key in keyof HTMLAttributes<T>]: HTMLAttributes<T>[key] | FluidValue | FluidInterpolation;
};
declare type FluidSVGAttributes<T> = {
    [key in keyof SVGAttributes<T>]: SVGAttributes<T>[key] | FluidValue | FluidInterpolation;
};
export declare function makeFluid<C extends WrappedComponentOrTag>(WrapperComponent: C): import("react").ForwardRefExoticComponent<Omit<FluidHTMLAttributes<EventTarget> & FluidSVGAttributes<EventTarget>, "style"> & {
    style?: FluidCSSProperties | undefined;
} & import("react").RefAttributes<unknown>>;
export {};
