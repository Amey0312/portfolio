import { FluidAnimation, EndResultType } from './FluidAnimation';
export declare type SpringConfig = {
    toValue: number;
    mass?: number;
    tension?: number;
    friction?: number;
    restDistance?: number;
    delay?: number;
};
export declare class Spring extends FluidAnimation {
    private startTime;
    private restDisplacementThreshold;
    private restSpeedThreshold;
    private velocity;
    private position;
    private toValue;
    private mass;
    private tension;
    private friction;
    private delay;
    private timeout;
    private animationFrame;
    private onFrame;
    constructor(config: SpringConfig);
    getInternalState(): {
        position: number;
        velocity: number;
        startTime: number;
    };
    start: (value: number, onFrame: (value: number) => void, onEnd: (result: EndResultType) => void | null, previousAnimation: FluidAnimation | null) => void;
    stop(): void;
    onUpdate(): void;
}
